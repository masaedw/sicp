(define (p) (p))

(define (test x y)
  (if (= x 0)
    0
    y))

;; 作用的順序(applicative-order)の場合、
;; オペレータとオペランドをそれぞれ評価し、適用していく
;; 組み合わせを先に評価する

;; (test 0 (p))
;;   ↓ testは組み合わせではない、0も同様、(p)は組み合わせなので値を得るために展開が必要
;;      (p) を展開するには、pのbodyである(p)に置き換える
;; (test 0 (p))
;; 最初の状態と同じ式になった。
;; したがってinterpeterはこの操作を延々繰り返すことになり、応答を返すことはない。

;;;;;;;;;;

;; 正規順序(normal-order)の場合、
;; オペランドは必要になるまで展開しない。

;; (test 0 (p))
;;   ↓ test を適用(testのbodyで置き換え)
;; (if (= 0 0) 0 (p)))
;;   ↓ 条件式を評価
;; (if #t 0 (p))
;;   ↓ 特殊形式 if は条件式を評価し、結果に応じてconsequentかalternativeのどちらかを評価する
;;      今回は条件は真なので、consequentを評価した結果がifの値となる
;; 0
;; Interperterは0を印字して終了する。
